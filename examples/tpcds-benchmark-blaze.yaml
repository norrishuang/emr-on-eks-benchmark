# // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# // SPDX-License-Identifier: MIT-0
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: tpcds-benchmark-oss-blaze
  namespace: emr-eks-spark
spec:
  type: Scala
  mode: cluster
  image: 812046859005.dkr.ecr.us-east-1.amazonaws.com/eks-blaze-spark-benchmark:3.3.3
  imagePullPolicy: Always
  sparkVersion: 3.3.3
  mainClass: com.amazonaws.eks.tpcds.BenchmarkSQL
  mainApplicationFile: local:///opt/spark/examples/jars/eks-spark-benchmark-assembly-1.0.jar
  arguments:
    # TPC-DS data localtion
    - "s3://tpcds-bemchmark-bucket-812046859005/BLOG_TPCDS-TEST-3T-partitioned/"
    # results location
    - "s3://emr-hive-us-east-1-812046859005/banchmark/SPARK_BLAZE_TPCDS-TEST-3T-RESULT/"
    # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
    # Data Format
    - "parquet"
    # Scale factor (in GB)
    - "3000"
    # Number of iterations
    - "1"
    # Optimize queries with hive tables
    - "false"
    # Filter queries, will run all if empty - "q98-v2.4,q99-v2.4,ss_max-v2.4,q95-v2.4"
    - "q1-v2.4,q2-v2.4,q3-v2.4,q4-v2.4,q5-v2.4,q6-v2.4,q7-v2.4,q8-v2.4,q9-v2.4,q10-v2.4,q11-v2.4,q12-v2.4,q13-v2.4,q14a-v2.4,q14b-v2.4,q15-v2.4,q16-v2.4,q17-v2.4,q18-v2.4,q19-v2.4,q20-v2.4,q21-v2.4,q22-v2.4,q23a-v2.4,q23b-v2.4,q24a-v2.4,q24b-v2.4,q25-v2.4,q26-v2.4,q27-v2.4,q28-v2.4,q29-v2.4,q30-v2.4,q31-v2.4,q32-v2.4,q33-v2.4,q34-v2.4,q35-v2.4,q36-v2.4,q37-v2.4,q38-v2.4,q39a-v2.4,q39b-v2.4,q40-v2.4,q41-v2.4,q42-v2.4,q43-v2.4,q44-v2.4,q45-v2.4,q46-v2.4,q47-v2.4,q48-v2.4,q49-v2.4,q50-v2.4,q51-v2.4,q52-v2.4,q53-v2.4,q54-v2.4,q55-v2.4,q56-v2.4,q57-v2.4,q58-v2.4,q59-v2.4,q60-v2.4,q61-v2.4,q62-v2.4,q63-v2.4,q64-v2.4,q65-v2.4,q66-v2.4,q67-v2.4,q68-v2.4,q69-v2.4,q70-v2.4,q71-v2.4,q72-v2.4,q73-v2.4,q74-v2.4,q75-v2.4,q76-v2.4,q77-v2.4,q78-v2.4,q79-v2.4,q80-v2.4,q81-v2.4,q82-v2.4,q83-v2.4,q84-v2.4,q85-v2.4,q86-v2.4,q87-v2.4,q88-v2.4,q89-v2.4,q90-v2.4,q91-v2.4,q92-v2.4,q93-v2.4,q94-v2.4,q95-v2.4,q96-v2.4,q97-v2.4,q98-v2.4,q99-v2.4,ss_max-v2.4"
    # - "q1-v2.4,q2-v2.4,q3-v2.4,q4-v2.4,q5-v2.4,q6-v2.4,q7-v2.4,q8-v2.4,q9-v2.4,q10-v2.4,q11-v2.4,q12-v2.4,q13-v2.4,q14a-v2.4,q14b-v2.4,q15-v2.4,q16-v2.4,q17-v2.4,q18-v2.4,q19-v2.4,q20-v2.4"
    # Logging set to WARN
    - "true"
  sparkConf:
    "spark.master": "k8s://https://01FFADF8D87ED652A507EC76A79C9675.gr7.us-east-1.eks.amazonaws.com"
    "spark.network.timeout": "2000s"
    "spark.executor.heartbeatInterval": "300s"
    # "spark.eventLog.enabled": "true"
    # "spark.eventLog.dir": "s3://tpcds-bemchmark-bucket-812046859005/event-log/"
    # AQE
    # "spark.sql.adaptive.enabled": "true"
    # "spark.sql.adaptive.localShuffleReader.enabled": "true"
    # "spark.sql.adaptive.coalescePartitions.enabled": "true"
    # "spark.sql.adaptive.skewJoin.enabled": "true"
    # "spark.sql.adaptive.logLevel": "WARN"
    # IRSA for S3 connection
    "spark.kubernetes.executor.podNamePrefix": "oss-blaze-spark-tpcds"
    "spark.hadoop.fs.s3a.aws.credentials.provider": "com.amazonaws.auth.WebIdentityTokenCredentialsProvider"
    "spark.hadoop.fs.s3.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version": "2"
    "spark.executor.defaultJavaOptions": "-verbose:gc -XX:+UseParallelGC -XX:InitiatingHeapOccupancyPercent=70"
    # blaze
    "spark.blaze.enable": "true"
    "spark.sql.extensions": "org.apache.spark.sql.blaze.BlazeSparkSessionExtension"
    "spark.memory.offHeap.enabled": "false"
    # "spark.io.compression.codec": "zstd"
    # "spark.sql.readSideCharPadding": "false"
    "spark.shuffle.manager": "org.apache.spark.sql.execution.blaze.shuffle.BlazeShuffleManager"
    # "spark.sql.parquet.compression.codec": "zstd"

    # prometheus
    "spark.ui.prometheus.enabled": "true"
    "spark.executor.processTreeMetrics.enabled": "true"
    "spark.kubernetes.driver.annotation.prometheus.io/scrape": "true"
    "spark.kubernetes.driver.annotation.prometheus.io/path": "/metrics/executors/prometheus/"
    "spark.kubernetes.driver.annotation.prometheus.io/port": "4040"
    "spark.kubernetes.driver.service.annotation.prometheus.io/scrape": "true"
    "spark.kubernetes.driver.service.annotation.prometheus.io/path": "/metrics/driver/prometheus/"
    "spark.kubernetes.driver.service.annotation.prometheus.io/port": "4040"
    "spark.metrics.conf.*.sink.prometheusServlet.class": "org.apache.spark.metrics.sink.PrometheusServlet"
    "spark.metrics.conf.*.sink.prometheusServlet.path": "/metrics/driver/prometheus/"
    "spark.metrics.conf.master.sink.prometheusServlet.path": "/metrics/master/prometheus/"
    "spark.metrics.conf.applications.sink.prometheusServlet.path": "/metrics/applications/prometheus/"

    # selector
    "spark.kubernetes.driver.node.selector.alpha.eksctl.io/nodegroup-name": "mng-benchmark-c5d-9xl-spark"
    "spark.kubernetes.executor.node.selector.alpha.eksctl.io/nodegroup-name": "mng-benchmark-c5d-9xl-spark"

    # pod template
    # spark.kubernetes.driver.podTemplateFile: s3://emr-hive-us-east-1-812046859005/app_code/pod-template/driver-pod-template-blaze.yaml
    # spark.kubernetes.executor.podTemplateFile: s3://emr-hive-us-east-1-812046859005/app_code/pod-template/executor-pod-template-blaze.yaml


    # Keep pods in a single AZ
    # "spark.kubernetes.node.selector.topology.kubernetes.io/zone": "us-east-1b"
    # "spark.kubernetes.node.selector.eks.amazonaws.com/capacityType": "ON_DEMAND"
  volumes:
    - name: spark-local-dir-1
      hostPath:
        path: /local1
    # - name: spark-local-dir-2
    #   hostPath:
    #     path: /local2
    # - name: spark-local-dir-3
    #   hostPath:
    #     path: /local3
    # - name: spark-local-dir-4
    #   hostPath:
    #     path: /local4
  driver:
    cores: 4
    coreLimit: "4.1"
    memory: "20g"
    memoryOverhead: "4096"
    serviceAccount: emr-job-execution-sa
    env:
      - name: BUCKET_PARAM
        valueFrom:
          configMapKeyRef:
            name: special-config
            key: codeBucket
    initContainers:
      - name: volume-permission
        image: public.ecr.aws/docker/library/busybox
        command: ['sh', '-c', 'mkdir -p /data1; chown -R 999:1000 /data1'] # grant volume access to hadoop user
        volumeMounts:
          - name: spark-local-dir-1
            mountPath: /data1
          # - name: spark-local-dir-2
          #   mountPath: /data2
          # - name: spark-local-dir-3
          #   mountPath: /data3
          # - name: spark-local-dir-4
          #   mountPath: /data4
        # ports:
        # - containerPort: 7337
        #   protocol: TCP
        #   name: spark_shuffle
    volumeMounts:
      - name: spark-local-dir-1
        mountPath: /data1
      # - name: spark-local-dir-2
      #   mountPath: /data2
      # - name: spark-local-dir-3
      #   mountPath: /data3
      # - name: spark-local-dir-4
      #   mountPath: /data4
  executor:
    cores: 4
    coreLimit: "4.3"
    memory: "6g"
    memoryOverhead: "4g"
    # 8 executors per node
    instances: 47
    serviceAccount: emr-job-execution-sa
    initContainers:
      - name: volume-permission
        image: public.ecr.aws/docker/library/busybox
        command: ['sh', '-c', 'mkdir -p /data1; chown -R 999:1000 /data1'] # grant volume access to hadoop user
        volumeMounts:
          - name: spark-local-dir-1
            mountPath: /data1
          # - name: spark-local-dir-2
          #   mountPath: /data2
          # - name: spark-local-dir-3
          #   mountPath: /data3
          # - name: spark-local-dir-4
          #   mountPath: /data4
        # ports:
        # - containerPort: 7337
        #   protocol: TCP
        #   name: spark_shuffle
    volumeMounts:
      - name: spark-local-dir-1
        mountPath: /data1
          # - name: spark-local-dir-2
          #   mountPath: /data2
          # - name: spark-local-dir-3
          #   mountPath: /data3
          # - name: spark-local-dir-4
          #   mountPath: /data4

  restartPolicy:
    type: Never